<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cn.black-shop</groupId>
	<artifactId>black-shop</artifactId>
	<version>1.0.0</version>
	<name>black-shop</name>
	<packaging>pom</packaging>
	<description>black-shop 微服务商城</description>
	<url>http://www.black-shop.cn</url>


	<organization>
		<name>Lee Zzi βin</name>
		<url>http://www.black-shop.cn/</url>
	</organization>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<scm>
		<url>https://github.com/lizibin/black-shop</url>
		<connection>scm:git:git://github.com/lizibin/black-shop.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:lizibin/black-shop.git</developerConnection>
	</scm>

	<issueManagement>
		<system>github</system>
		<url>https://github.com/lizibin/black-shop/issues</url>
	</issueManagement>

	<developers>
		<developer>
			<id>nobodyiam</id>
			<name>Lee Zzi βin</name>
			<email>12572024@qq.com</email>
			<organization>black-shop</organization>
			<organizationUrl>http://www.black-shop.cn</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>


	<properties>
		<springboot.version>2.5.12</springboot.version>
		<springcloud.version>Greenwich.SR4</springcloud.version>
		<spring-platform.version>Cairo-SR8</spring-platform.version>
		<springcloud.alibaba.version>2.1.1.RELEASE</springcloud.alibaba.version>
		<springboot.jasypt.version>2.1.0</springboot.jasypt.version>
		<springboot.mybatis.version>1.3.2</springboot.mybatis.version>
		<security.oauth.version>2.3.6.RELEASE</security.oauth.version>
		<hutool.version>4.5.1</hutool.version>
		<springboot.swagger.version>1.8.0.RELEASE</springboot.swagger.version>
		<swagger.version>2.9.2</swagger.version>
		<swagger-bootstrap-ui.version>1.9.6</swagger-bootstrap-ui.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<docker.registry>192.168.0.188</docker.registry>
		<docker.host>http://192.168.0.188:2375</docker.host>
		<docker.namespace>blackshop</docker.namespace>
		<docker.username>admin</docker.username>
		<docker.password>Harbor12345</docker.password>
		<docker.plugin.version>0.32.0</docker.plugin.version>
	</properties>

	<modules>
		<module>black-shop-common</module>
		<module>black-shop-service</module>
		<module>black-shop-portal</module>
		<module>black-shop-auth</module>
		<module>black-shop-gateway</module>
		<module>black-shop-nacos</module>
	</modules>

	<!-- 管理依赖 -->
	<dependencyManagement>
		<dependencies>
			<!-- spring Boot 依赖 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${springboot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- spring Cloud 依赖 -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${springcloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- spring Cloud Alibaba依赖 -->
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${springcloud.alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.spring.platform</groupId>
				<artifactId>platform-bom</artifactId>
				<version>${spring-platform.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- 统一依赖管理 -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>black-shop-common-bom</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--稳定版本，替代spring security bom内置-->
			<dependency>
				<groupId>org.springframework.security.oauth</groupId>
				<artifactId>spring-security-oauth2</artifactId>
				<version>${security.oauth.version}</version>
			</dependency>
			<!--spring boot web 组件 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${springboot.version}</version>
				<exclusions>
					<!--排除tomcat依赖 ,使用underom -->
					<exclusion>
						<artifactId>spring-boot-starter-tomcat</artifactId>
						<groupId>org.springframework.boot</groupId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!--SpringCloud整合sentinel熔断限流降级依赖 -->
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
		</dependency>
		<!--feign 依赖-->
		<dependency>
			<groupId>io.github.openfeign</groupId>
			<artifactId>feign-okhttp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- SpringBoot整合lombok组件 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<!-- SpringBoot整合jasypt加密 -->
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>${springboot.jasypt.version}</version>
		</dependency>
		<!--springBoot整合swagger -->
		<dependency>
			<groupId>com.spring4all</groupId>
			<artifactId>swagger-spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.springfox</groupId>
					<artifactId>springfox-swagger-ui</artifactId>
				</exclusion>
			</exclusions>
			<version>${springboot.swagger.version}</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.name}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${springboot.version}</version>
					<configuration>
						<finalName>${project.build.finalName}</finalName>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker.plugin.version}</version>
					<configuration>
						<dockerHost>${docker.host}</dockerHost>
						<registry>${docker.registry}</registry>
						<authConfig>
							<push>
								<username>${docker.username}</username>
								<password>${docker.password}</password>
							</push>
						</authConfig>
						<images>
							<image>
								<name>${docker.registry}/${docker.namespace}/${project.name}:${project.version}</name>
								<build>
									<dockerFile>${project.basedir}/Dockerfile</dockerFile>
								</build>
							</image>
						</images>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<target>${maven.compiler.target}</target>
					<source>${maven.compiler.source}</source>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<repositories>
		<!--阿里云主仓库，代理了maven central和jcenter仓库 -->
		<repository>
			<id>aliyun</id>
			<name>aliyun</name>
			<url>https://maven.aliyun.com/repository/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!--阿里云代理Spring 官方仓库 -->
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://maven.aliyun.com/repository/spring</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<!-- 环境标识，需要与配置文件的名称相对应 -->
				<profiles.active>dev</profiles.active>
			</properties>
			<activation>
				<!-- 默认环境 -->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<profiles.active>test</profiles.active>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<profiles.active>prod</profiles.active>
			</properties>
		</profile>
	</profiles>
</project>
